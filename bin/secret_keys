#!/usr/bin/env ruby

require_relative "../lib/secret_keys/cli"

# Load enironment variables from .env file in current working directory if available.
if File.exist?(File.expand_path(".env"))
  begin
    require 'dotenv/load'
  rescue LoadError
    # Ignore; dotenv gem not available.
  end
end

COMMANDS = {
  "encrypt" => SecretKeys::CLI::Encrypt,
  "decrypt" => SecretKeys::CLI::Decrypt,
  "read" => SecretKeys::CLI::Read,
  "edit" => SecretKeys::CLI::Edit
}.freeze

argv = ARGV
action = argv.shift
command_class = COMMANDS[action]
unless command_class
  if action == "help" || action == "--help"
    if argv.empty?
      puts <<~HELP
      Usage: secret_keys <command> ...

      Commands:
          encrypt   Encrypt a file
          decrypt   Decrypt a file
          read      Read the value of one key in a file
          edit      Change which values are encrypted, the file's encryption key, delete/add keys, etc.

          help      Get help for a command
      HELP
    elsif argv.one? && COMMANDS.include?(argv.first)
      COMMANDS[argv.first].new(["--help"])
    else
      STDERR.puts "Unknown help for #{argv.inspect}."
      exit 1
    end

    exit 0
  else
    STDERR.puts "Unknow action #{action.inspect}; must be one of #{COMMANDS.keys.join(', ')}"
    STDERR.puts "Run secret_keys --help for more info"
  end
  exit 1
end

command = command_class.new(argv)
command.run!
